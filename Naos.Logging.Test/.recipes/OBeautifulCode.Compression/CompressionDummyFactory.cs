// --------------------------------------------------------------------------------------------------------------------
// <copyright file="CompressionDummyFactory.cs" company="OBeautifulCode">
//   Copyright (c) OBeautifulCode 2018. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package. Will be overwritten with package update except in OBeautifulCode.Compression.Recipes source.
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace OBeautifulCode.Compression.Recipes
{
    using System;

    using FakeItEasy;

    using OBeautifulCode.AutoFakeItEasy;
    using OBeautifulCode.Compression;

    /// <summary>
    /// Create dummy objects for types in <see cref="OBeautifulCode.Compression" />.
    /// </summary>
#if !OBeautifulCodeCompressionRecipesProject
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCode("OBeautifulCode.Compression.Recipes", "See package version number")]
    internal
#else
    public
#endif
    class CompressionDummyFactory : IDummyFactory
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CompressionDummyFactory"/> class.
        /// </summary>
        public CompressionDummyFactory()
        {
            AutoFixtureBackedDummyFactory.ConstrainDummyToExclude(CompressionKind.Invalid);
        }

        /// <inheritdoc />
        public Priority Priority => new Priority(1);

        /// <inheritdoc />
        public bool CanCreate(Type type)
        {
            return false;
        }

        /// <inheritdoc />
        public object Create(Type type)
        {
            return null;
        }
    }
}